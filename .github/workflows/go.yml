name: Lint
on:
  push:
    branches:
      - 'main'
      - 'master'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - '*'
jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: Lint
    steps:
      - name: Set up go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Vet
        run: |
          make vet
          
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v2.5.1
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: latest
          # Optional: working directory, useful for monorepos
          # working-directory: somedir
    
          # Optional: golangci-lint command line arguments.
          args: --issues-exit-code=0
    
          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true
    
          # Optional: if set to true then the action will use pre-installed Go.
          skip-go-installation: true
    
          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          skip-pkg-cache: true
    
          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          skip-build-cache: true
        
          
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: success()
        with:
          version: latest
          install-only: true
          
      - name: Run GoReleaser snapshot
        if: success()
        run: |
          make release-local-snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          